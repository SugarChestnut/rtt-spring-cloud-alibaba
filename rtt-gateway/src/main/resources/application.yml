server:
    port: 13148
spring:
    #    config:
    #        # springboot 2.4 开始支持
    #        import:
    #            - optional:nacos:spring-cloud-base.yaml
    #    profiles:
    #        include:
    #        active: default
    application:
        name: rtt-gateway
    cloud:
        gateway:
            enabled: true
            routes:
                # id 自定义，全局唯一
                -   id: rtt-server-route
                    # 匹配后的访问地址，使用服务发现做负载均衡
                    uri: lb://rtt-server
                    # 断言，路径匹配
                    # 过滤器分类：ZonedDateTime、Cookie、Header、Host、Method、Path、Query、RemoteAddr
                    predicates:
                        - Path=/server/**
                    # 过滤规则
                    filters:
                        # 通过 name + GatewayFilterFactory 获取 factoryBean，创建 gatewayFilter，将 filter 添加到链路中
                        # 简写方式（去掉前缀，这里就是去掉 server）
                        #                        - StripPrefix=1
                        -   name: StripPrefix
                            args:
                                parts: 1
                        -   name: Retry
                            args:
                                retries: 3
                                statuses:
                                    - SERVICE_UNAVAILABLE
                        # 自定义 filter
                        -   name: Auth
                            args:
                                header-key: authentication
                                auth:
                                    all-purpose: jxz
                        -   name: RequestRateLimiter
                            # RequestRateLimiterFactory 的 config 的属性
                            args:
                                deny-empty-key: true
                                empty-key-status: FORBIDDEN
                                # SpEL 配置指定 ipAddressKeyResolver 名称的 bean
#                                key-resolver: '#{@ipAddressKeyResolver}'
                                # RedisRateLimiter 的 config 属性，从 limiter 中 CONFIGURATION_PROPERTY_NAME，获取属性的前缀
                                redis-rate-limiter:
                                    replenish-rate: 2
                                    burst-capacity: 2
                                    requested-tokens: 1
            filter:
                # RequestRateLimiterGatewayFilterFactory 的 通用属性
                request-rate-limiter:
                    deny-empty-key: true
                    empty-key-status-code: FORBIDDEN
                auth:
                    enable: true
            # RedisRateLimiter 的通用属性
            redis-rate-limiter:
                includeHeaders: true
            discovery:
                locator:
                    # 开启从注册中心动态创建路由的功能
                    enabled: true
                    # 默认大写
                    lower-case-service-id: true
            # 配置请求参数
            httpclient:
                connect-timeout: 1000
                response-timeout: 5s
        # 服务发现
        nacos:
            server-addr: http://127.0.0.1:8848
            username: nacos
            password: nacos
            discovery:
                group: app
                namespace: dev
                enabled: true
        # 限流
        sentinel:
            enabled: true
            transport:
                dashboard: http://127.0.0.1:13149
                port: 8721
    redis:
        host: 127.0.0.1
        port: 6379
    security:
        user:
            name: rtt
            password: rtt
            roles:
                - "ADMIN"
logging:
    level:
        root: info
